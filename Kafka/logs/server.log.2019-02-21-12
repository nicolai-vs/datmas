[2019-02-21 12:06:38,099] INFO [GroupMetadataManager brokerId=0] Removed 0 expired offsets in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-21 12:16:38,099] INFO [GroupMetadataManager brokerId=0] Removed 0 expired offsets in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-21 12:26:38,099] INFO [GroupMetadataManager brokerId=0] Removed 0 expired offsets in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-21 12:36:38,098] INFO [GroupMetadataManager brokerId=0] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-21 12:46:38,099] INFO [GroupMetadataManager brokerId=0] Removed 0 expired offsets in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-21 12:56:38,099] INFO [GroupMetadataManager brokerId=0] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-21 12:58:47,579] INFO [GroupCoordinator 0]: Preparing to rebalance group console-consumer-31873 in state PreparingRebalance with old generation 1 (__consumer_offsets-3) (reason: removing member consumer-1-5e6a8b0f-c375-476d-bff8-77bf58df556b on LeaveGroup) (kafka.coordinator.group.GroupCoordinator)
[2019-02-21 12:58:47,581] INFO [GroupCoordinator 0]: Group console-consumer-31873 with generation 2 is now empty (__consumer_offsets-3) (kafka.coordinator.group.GroupCoordinator)
[2019-02-21 12:59:56,490] INFO Terminating process due to signal SIGTERM (org.apache.kafka.common.utils.LoggingSignalHandler)
[2019-02-21 12:59:56,494] INFO [KafkaServer id=0] shutting down (kafka.server.KafkaServer)
[2019-02-21 12:59:56,495] INFO [KafkaServer id=0] Starting controlled shutdown (kafka.server.KafkaServer)
[2019-02-21 12:59:56,520] INFO [KafkaServer id=0] Controlled shutdown succeeded (kafka.server.KafkaServer)
[2019-02-21 12:59:56,526] INFO [/config/changes-event-process-thread]: Shutting down (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2019-02-21 12:59:56,526] INFO [/config/changes-event-process-thread]: Shutdown completed (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2019-02-21 12:59:56,526] INFO [/config/changes-event-process-thread]: Stopped (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2019-02-21 12:59:56,527] INFO [SocketServer brokerId=0] Stopping socket server request processors (kafka.network.SocketServer)
[2019-02-21 12:59:56,535] INFO [SocketServer brokerId=0] Stopped socket server request processors (kafka.network.SocketServer)
[2019-02-21 12:59:56,536] INFO [Kafka Request Handler on Broker 0], shutting down (kafka.server.KafkaRequestHandlerPool)
[2019-02-21 12:59:56,539] INFO [Kafka Request Handler on Broker 0], shut down completely (kafka.server.KafkaRequestHandlerPool)
[2019-02-21 12:59:56,543] INFO [KafkaApi-0] Shutdown complete. (kafka.server.KafkaApis)
[2019-02-21 12:59:56,544] INFO [ExpirationReaper-0-topic]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-21 12:59:56,706] INFO [ExpirationReaper-0-topic]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-21 12:59:56,706] INFO [ExpirationReaper-0-topic]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-21 12:59:56,711] INFO [TransactionCoordinator id=0] Shutting down. (kafka.coordinator.transaction.TransactionCoordinator)
[2019-02-21 12:59:56,712] INFO [ProducerId Manager 0]: Shutdown complete: last producerId assigned 0 (kafka.coordinator.transaction.ProducerIdManager)
[2019-02-21 12:59:56,713] INFO [Transaction State Manager 0]: Shutdown complete (kafka.coordinator.transaction.TransactionStateManager)
[2019-02-21 12:59:56,713] INFO [Transaction Marker Channel Manager 0]: Shutting down (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2019-02-21 12:59:56,714] INFO [Transaction Marker Channel Manager 0]: Stopped (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2019-02-21 12:59:56,714] INFO [Transaction Marker Channel Manager 0]: Shutdown completed (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2019-02-21 12:59:56,714] INFO [TransactionCoordinator id=0] Shutdown complete. (kafka.coordinator.transaction.TransactionCoordinator)
[2019-02-21 12:59:56,715] INFO [GroupCoordinator 0]: Shutting down. (kafka.coordinator.group.GroupCoordinator)
[2019-02-21 12:59:56,716] INFO [ExpirationReaper-0-Heartbeat]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-21 12:59:56,761] INFO [ExpirationReaper-0-Heartbeat]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-21 12:59:56,761] INFO [ExpirationReaper-0-Heartbeat]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-21 12:59:56,762] INFO [ExpirationReaper-0-Rebalance]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-21 12:59:56,911] INFO [ExpirationReaper-0-Rebalance]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-21 12:59:56,911] INFO [ExpirationReaper-0-Rebalance]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-21 12:59:56,915] INFO [GroupCoordinator 0]: Shutdown complete. (kafka.coordinator.group.GroupCoordinator)
[2019-02-21 12:59:56,917] INFO [ReplicaManager broker=0] Shutting down (kafka.server.ReplicaManager)
[2019-02-21 12:59:56,918] INFO [LogDirFailureHandler]: Shutting down (kafka.server.ReplicaManager$LogDirFailureHandler)
[2019-02-21 12:59:56,919] INFO [LogDirFailureHandler]: Stopped (kafka.server.ReplicaManager$LogDirFailureHandler)
[2019-02-21 12:59:56,919] INFO [LogDirFailureHandler]: Shutdown completed (kafka.server.ReplicaManager$LogDirFailureHandler)
[2019-02-21 12:59:56,921] INFO [ReplicaFetcherManager on broker 0] shutting down (kafka.server.ReplicaFetcherManager)
[2019-02-21 12:59:56,929] INFO [ReplicaFetcherManager on broker 0] shutdown completed (kafka.server.ReplicaFetcherManager)
[2019-02-21 12:59:56,930] INFO [ReplicaAlterLogDirsManager on broker 0] shutting down (kafka.server.ReplicaAlterLogDirsManager)
[2019-02-21 12:59:56,932] INFO [ReplicaAlterLogDirsManager on broker 0] shutdown completed (kafka.server.ReplicaAlterLogDirsManager)
[2019-02-21 12:59:56,932] INFO [ExpirationReaper-0-Fetch]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-21 12:59:57,013] INFO [ExpirationReaper-0-Fetch]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-21 12:59:57,013] INFO [ExpirationReaper-0-Fetch]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-21 12:59:57,014] INFO [ExpirationReaper-0-Produce]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-21 12:59:57,110] INFO [ExpirationReaper-0-Produce]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-21 12:59:57,110] INFO [ExpirationReaper-0-Produce]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-21 12:59:57,112] INFO [ExpirationReaper-0-DeleteRecords]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-21 12:59:57,286] INFO [ExpirationReaper-0-DeleteRecords]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-21 12:59:57,286] INFO [ExpirationReaper-0-DeleteRecords]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-21 12:59:57,326] INFO [ReplicaManager broker=0] Shut down completely (kafka.server.ReplicaManager)
[2019-02-21 12:59:57,329] INFO Shutting down. (kafka.log.LogManager)
[2019-02-21 12:59:57,398] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,429] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,469] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,498] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,549] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,575] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,592] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,607] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,624] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,633] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,646] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,656] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,666] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,678] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,700] INFO [ProducerStateManager partition=__consumer_offsets-9] Writing producer snapshot at offset 3 (kafka.log.ProducerStateManager)
[2019-02-21 12:59:57,714] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,725] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,740] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,749] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,765] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,773] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,786] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,797] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,810] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,821] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,830] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,841] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,852] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,863] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,874] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,884] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,896] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,906] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,916] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,929] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,941] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,952] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,968] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,979] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:57,997] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,008] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,026] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,038] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,053] INFO [ProducerStateManager partition=__consumer_offsets-3] Writing producer snapshot at offset 2 (kafka.log.ProducerStateManager)
[2019-02-21 12:59:58,061] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,070] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,081] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,091] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,102] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,119] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,130] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,140] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,150] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,161] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,167] INFO [ProducerStateManager partition=udp-input-0] Writing producer snapshot at offset 1666 (kafka.log.ProducerStateManager)
[2019-02-21 12:59:58,177] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,188] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,205] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,216] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,236] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,246] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,265] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,276] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,295] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,305] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,317] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,329] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,341] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,351] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,364] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,374] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,385] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,395] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,406] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,416] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,428] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,439] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,453] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,462] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,473] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,483] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,500] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,512] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,528] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,538] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,556] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,566] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,585] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,597] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,610] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,619] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,631] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,641] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,652] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,662] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,672] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,682] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,693] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,703] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,709] INFO [ProducerStateManager partition=__consumer_offsets-10] Writing producer snapshot at offset 3 (kafka.log.ProducerStateManager)
[2019-02-21 12:59:58,719] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,728] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,739] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,749] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,767] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:565)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:565)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,778] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:242)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:253)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:566)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:566)
	at kafka.log.Log.$anonfun$close$4(Log.scala:714)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:714)
	at scala.collection.Iterator.foreach(Iterator.scala:937)
	at scala.collection.Iterator.foreach$(Iterator.scala:937)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1425)
	at scala.collection.IterableLike.foreach(IterableLike.scala:70)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:69)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at kafka.log.Log.$anonfun$close$3(Log.scala:714)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.log.Log.maybeHandleIOException(Log.scala:1927)
	at kafka.log.Log.close(Log.scala:709)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-21 12:59:58,825] INFO Shutdown complete. (kafka.log.LogManager)
[2019-02-21 12:59:58,832] INFO [ZooKeeperClient] Closing. (kafka.zookeeper.ZooKeeperClient)
[2019-02-21 12:59:58,841] INFO Session: 0x100061ad705005c closed (org.apache.zookeeper.ZooKeeper)
[2019-02-21 12:59:58,842] INFO EventThread shut down for session: 0x100061ad705005c (org.apache.zookeeper.ClientCnxn)
[2019-02-21 12:59:58,843] INFO [ZooKeeperClient] Closed. (kafka.zookeeper.ZooKeeperClient)
[2019-02-21 12:59:58,843] INFO [ThrottledChannelReaper-Fetch]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-02-21 12:59:59,253] INFO [ThrottledChannelReaper-Fetch]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-02-21 12:59:59,253] INFO [ThrottledChannelReaper-Fetch]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-02-21 12:59:59,256] INFO [ThrottledChannelReaper-Produce]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
